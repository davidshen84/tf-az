#+TITLE: github rest api
#+AUTHOR: David S
#+STARTUP: content

* README
Each Github repository has a encryptic key pair. Only the public key
can be obtained by the user. So only github can decrept the values. We
can encrypt our *secrets* and commit them in the code. We can also use
Terraform to create/update repository secrets.

* Git repository public key
:PROPERTIES:
:header-args: :var owner="davidshen84"
:header-args+: :var repo="tf-az"
:header-args+: :var pat="pat"
:END:

The *PAT* should have the `repo:public_repo` permission.

#+name: token
#+begin_src shell
  echo -n "${owner}:${pat}" | openssl base64 -A
#+end_src

#+name: public_key
#+begin_src http :var token=token :pretty
  GET https://api.github.com/repos/${owner}/${repo}/actions/secrets/public-key
  Authorization: Basic ${token}
#+end_src

#+name: key_id
#+begin_src shell :var f=public_key
  jq '.key_id'<<EOF
  ${f}
  EOF
#+end_src

#+name: key
#+begin_src shell :var f=public_key
  jq .'key'<<EOF
  ${f}
  EOF
#+end_src

* Encrypt values using the public key

#+name: encrypted_secret
#+begin_src python :var public_key=key :results verbatim
  from base64 import b64encode
  from nacl import encoding, public
  import json

  secret_value = 'ok'

  public_key = public.PublicKey(public_key.encode('utf-8'), encoding.Base64Encoder())
  sealed_box = public.SealedBox(public_key)
  encrypted = sealed_box.encrypt(secret_value.encode('utf-8'))

  return b64encode(encrypted).decode('utf-8')
#+end_src

* Create new secret
#+begin_src http :pretty :var token=token secret=encrypted_secret key_id=key_id
  PUT https://api.github.com/repos/${owner}/${repo}/actions/secrets/OK_SECRET
  Authorization: Basic ${token}
  Accept: application/vnd.github.v3+json

  {
    "key_id": "${key_id}",
    "encrypted_value": "${secret}"
  }

#+end_src


#+begin_src http :pretty :var token=token
  GET https://api.github.com/repos/${owner}/${repo}/actions/secrets
  Authorization: Basic ${token}
#+end_src

